
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000788  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000910  08000918  00001918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000910  08000910  00001918  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000910  08000910  00001918  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000910  08000918  00001918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000910  08000910  00001910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000914  08000914  00001914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001918  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001918  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a52  00000000  00000000  00001942  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002b0  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00002648  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008b  00000000  00000000  00002710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014c2  00000000  00000000  0000279b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000ec8  00000000  00000000  00003c5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005633  00000000  00000000  00004b25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a158  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000268  00000000  00000000  0000a19c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004c  00000000  00000000  0000a404  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080008f8 	.word	0x080008f8

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080008f8 	.word	0x080008f8

080001c8 <main>:
{
    for (uint32_t i = 0; i < 500000; i++);
}

int main(void)
{
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b086      	sub	sp, #24
 80001cc:	af00      	add	r7, sp, #0
    GPIO_Handle_t GpioLed, GpioBtn;

    // 1. Cấu hình LED tại PA5
    GpioLed.pGPIOx = GPIOA;
 80001ce:	4b19      	ldr	r3, [pc, #100]	@ (8000234 <main+0x6c>)
 80001d0:	60fb      	str	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80001d2:	2305      	movs	r3, #5
 80001d4:	743b      	strb	r3, [r7, #16]
    GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001d6:	2301      	movs	r3, #1
 80001d8:	747b      	strb	r3, [r7, #17]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001da:	2302      	movs	r3, #2
 80001dc:	74bb      	strb	r3, [r7, #18]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001de:	2300      	movs	r3, #0
 80001e0:	753b      	strb	r3, [r7, #20]
    GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001e2:	2300      	movs	r3, #0
 80001e4:	74fb      	strb	r3, [r7, #19]

    GPIO_PeriClockControl(GPIOA, ENABLE);
 80001e6:	2101      	movs	r1, #1
 80001e8:	4812      	ldr	r0, [pc, #72]	@ (8000234 <main+0x6c>)
 80001ea:	f000 f85f 	bl	80002ac <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 80001ee:	f107 030c 	add.w	r3, r7, #12
 80001f2:	4618      	mov	r0, r3
 80001f4:	f000 f8de 	bl	80003b4 <GPIO_Init>

    // 2. Cấu hình Button tại PC13 làm ngắt ngoài
    GpioBtn.pGPIOx = GPIOC;
 80001f8:	4b0f      	ldr	r3, [pc, #60]	@ (8000238 <main+0x70>)
 80001fa:	603b      	str	r3, [r7, #0]
    GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001fc:	230d      	movs	r3, #13
 80001fe:	713b      	strb	r3, [r7, #4]
    GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;  // Falling Edge
 8000200:	2304      	movs	r3, #4
 8000202:	717b      	strb	r3, [r7, #5]
    GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000204:	2302      	movs	r3, #2
 8000206:	71bb      	strb	r3, [r7, #6]
    GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000208:	2301      	movs	r3, #1
 800020a:	71fb      	strb	r3, [r7, #7]

    GPIO_PeriClockControl(GPIOC, ENABLE);
 800020c:	2101      	movs	r1, #1
 800020e:	480a      	ldr	r0, [pc, #40]	@ (8000238 <main+0x70>)
 8000210:	f000 f84c 	bl	80002ac <GPIO_PeriClockControl>
    GPIO_Init(&GpioBtn);
 8000214:	463b      	mov	r3, r7
 8000216:	4618      	mov	r0, r3
 8000218:	f000 f8cc 	bl	80003b4 <GPIO_Init>

    // 3. Cấu hình NVIC cho EXTI13 (nút PC13 tương ứng EXTI13 -> IRQ 40)
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI15_10, NVIC_IRQ_PRI15);
 800021c:	210f      	movs	r1, #15
 800021e:	2028      	movs	r0, #40	@ 0x28
 8000220:	f000 faf8 	bl	8000814 <GPIO_IRQPriorityConfig>
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10,NVIC_IRQ_PRI15, ENABLE);
 8000224:	2201      	movs	r2, #1
 8000226:	210f      	movs	r1, #15
 8000228:	2028      	movs	r0, #40	@ 0x28
 800022a:	f000 fa6d 	bl	8000708 <GPIO_IRQInterruptConfig>

    while (1);
 800022e:	bf00      	nop
 8000230:	e7fd      	b.n	800022e <main+0x66>
 8000232:	bf00      	nop
 8000234:	40020000 	.word	0x40020000
 8000238:	40020800 	.word	0x40020800

0800023c <EXTI15_10_IRQHandler>:
}

void EXTI15_10_IRQHandler(void)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	af00      	add	r7, sp, #0
    GPIO_IRQHandling(GPIO_PIN_NO_13);  // Clear pending bit cho EXTI13
 8000240:	200d      	movs	r0, #13
 8000242:	f000 fb15 	bl	8000870 <GPIO_IRQHandling>
    GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);  // Toggle LED
 8000246:	2105      	movs	r1, #5
 8000248:	4802      	ldr	r0, [pc, #8]	@ (8000254 <EXTI15_10_IRQHandler+0x18>)
 800024a:	f000 fa49 	bl	80006e0 <GPIO_ToggleOutputPin>
}
 800024e:	bf00      	nop
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	40020000 	.word	0x40020000

08000258 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000258:	480d      	ldr	r0, [pc, #52]	@ (8000290 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800025a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800025c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000260:	480c      	ldr	r0, [pc, #48]	@ (8000294 <LoopForever+0x6>)
  ldr r1, =_edata
 8000262:	490d      	ldr	r1, [pc, #52]	@ (8000298 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000264:	4a0d      	ldr	r2, [pc, #52]	@ (800029c <LoopForever+0xe>)
  movs r3, #0
 8000266:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000268:	e002      	b.n	8000270 <LoopCopyDataInit>

0800026a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800026a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800026c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026e:	3304      	adds	r3, #4

08000270 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000270:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000272:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000274:	d3f9      	bcc.n	800026a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000276:	4a0a      	ldr	r2, [pc, #40]	@ (80002a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000278:	4c0a      	ldr	r4, [pc, #40]	@ (80002a4 <LoopForever+0x16>)
  movs r3, #0
 800027a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800027c:	e001      	b.n	8000282 <LoopFillZerobss>

0800027e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000280:	3204      	adds	r2, #4

08000282 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000282:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000284:	d3fb      	bcc.n	800027e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000286:	f000 fb13 	bl	80008b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800028a:	f7ff ff9d 	bl	80001c8 <main>

0800028e <LoopForever>:

LoopForever:
  b LoopForever
 800028e:	e7fe      	b.n	800028e <LoopForever>
  ldr   r0, =_estack
 8000290:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000294:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000298:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800029c:	08000918 	.word	0x08000918
  ldr r2, =_sbss
 80002a0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a4:	2000001c 	.word	0x2000001c

080002a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a8:	e7fe      	b.n	80002a8 <ADC_IRQHandler>
	...

080002ac <GPIO_PeriClockControl>:
 * @note       - none
 *
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	460b      	mov	r3, r1
 80002b6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002b8:	78fb      	ldrb	r3, [r7, #3]
 80002ba:	2b01      	cmp	r3, #1
 80002bc:	d161      	bne.n	8000382 <GPIO_PeriClockControl+0xd6>
	{
		if(pGPIOx == GPIOA)
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4a32      	ldr	r2, [pc, #200]	@ (800038c <GPIO_PeriClockControl+0xe0>)
 80002c2:	4293      	cmp	r3, r2
 80002c4:	d106      	bne.n	80002d4 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002c6:	4b32      	ldr	r3, [pc, #200]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80002ca:	4a31      	ldr	r2, [pc, #196]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002cc:	f043 0301 	orr.w	r3, r3, #1
 80002d0:	62d3      	str	r3, [r2, #44]	@ 0x2c
	else
	{
		//TODO
	}

}
 80002d2:	e056      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOB)
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	4a2f      	ldr	r2, [pc, #188]	@ (8000394 <GPIO_PeriClockControl+0xe8>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d106      	bne.n	80002ea <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002dc:	4b2c      	ldr	r3, [pc, #176]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80002e0:	4a2b      	ldr	r2, [pc, #172]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002e2:	f043 0302 	orr.w	r3, r3, #2
 80002e6:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 80002e8:	e04b      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOC)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a2a      	ldr	r2, [pc, #168]	@ (8000398 <GPIO_PeriClockControl+0xec>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d106      	bne.n	8000300 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002f2:	4b27      	ldr	r3, [pc, #156]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80002f6:	4a26      	ldr	r2, [pc, #152]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 80002f8:	f043 0304 	orr.w	r3, r3, #4
 80002fc:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 80002fe:	e040      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOD)
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a26      	ldr	r2, [pc, #152]	@ (800039c <GPIO_PeriClockControl+0xf0>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000308:	4b21      	ldr	r3, [pc, #132]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 800030a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800030c:	4a20      	ldr	r2, [pc, #128]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 800030e:	f043 0308 	orr.w	r3, r3, #8
 8000312:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8000314:	e035      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOE)
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a21      	ldr	r2, [pc, #132]	@ (80003a0 <GPIO_PeriClockControl+0xf4>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800031e:	4b1c      	ldr	r3, [pc, #112]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000320:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000322:	4a1b      	ldr	r2, [pc, #108]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000324:	f043 0310 	orr.w	r3, r3, #16
 8000328:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 800032a:	e02a      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOF)
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a1d      	ldr	r2, [pc, #116]	@ (80003a4 <GPIO_PeriClockControl+0xf8>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000334:	4b16      	ldr	r3, [pc, #88]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000338:	4a15      	ldr	r2, [pc, #84]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 800033a:	f043 0320 	orr.w	r3, r3, #32
 800033e:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8000340:	e01f      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if  (pGPIOx == GPIOG)
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a18      	ldr	r2, [pc, #96]	@ (80003a8 <GPIO_PeriClockControl+0xfc>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800034a:	4b11      	ldr	r3, [pc, #68]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 800034c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800034e:	4a10      	ldr	r2, [pc, #64]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000350:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000354:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8000356:	e014      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if  (pGPIOx == GPIOH)
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a14      	ldr	r2, [pc, #80]	@ (80003ac <GPIO_PeriClockControl+0x100>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000360:	4b0b      	ldr	r3, [pc, #44]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000362:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000364:	4a0a      	ldr	r2, [pc, #40]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000366:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800036a:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 800036c:	e009      	b.n	8000382 <GPIO_PeriClockControl+0xd6>
		}else if  (pGPIOx == GPIOI)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a0f      	ldr	r2, [pc, #60]	@ (80003b0 <GPIO_PeriClockControl+0x104>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d105      	bne.n	8000382 <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 8000376:	4b06      	ldr	r3, [pc, #24]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 8000378:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800037a:	4a05      	ldr	r2, [pc, #20]	@ (8000390 <GPIO_PeriClockControl+0xe4>)
 800037c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000380:	62d3      	str	r3, [r2, #44]	@ 0x2c
}
 8000382:	bf00      	nop
 8000384:	370c      	adds	r7, #12
 8000386:	46bd      	mov	sp, r7
 8000388:	bc80      	pop	{r7}
 800038a:	4770      	bx	lr
 800038c:	40020000 	.word	0x40020000
 8000390:	40023800 	.word	0x40023800
 8000394:	40020400 	.word	0x40020400
 8000398:	40020800 	.word	0x40020800
 800039c:	40020c00 	.word	0x40020c00
 80003a0:	40021000 	.word	0x40021000
 80003a4:	40021400 	.word	0x40021400
 80003a8:	40021800 	.word	0x40021800
 80003ac:	40021c00 	.word	0x40021c00
 80003b0:	40022000 	.word	0x40022000

080003b4 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b087      	sub	sp, #28
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
	uint32_t temp=0; //temp.register
 80003bc:	2300      	movs	r3, #0
 80003be:	617b      	str	r3, [r7, #20]

	//1. configure the mode of gpio port

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	795b      	ldrb	r3, [r3, #5]
 80003c4:	2b03      	cmp	r3, #3
 80003c6:	d820      	bhi.n	800040a <GPIO_Init+0x56>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	795b      	ldrb	r3, [r3, #5]
 80003cc:	461a      	mov	r2, r3
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	005b      	lsls	r3, r3, #1
 80003d4:	fa02 f303 	lsl.w	r3, r2, r3
 80003d8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	681a      	ldr	r2, [r3, #0]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	791b      	ldrb	r3, [r3, #4]
 80003e4:	005b      	lsls	r3, r3, #1
 80003e6:	2103      	movs	r1, #3
 80003e8:	fa01 f303 	lsl.w	r3, r1, r3
 80003ec:	43db      	mvns	r3, r3
 80003ee:	4619      	mov	r1, r3
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	400a      	ands	r2, r1
 80003f6:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	6819      	ldr	r1, [r3, #0]
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	697a      	ldr	r2, [r7, #20]
 8000404:	430a      	orrs	r2, r1
 8000406:	601a      	str	r2, [r3, #0]
 8000408:	e0c3      	b.n	8000592 <GPIO_Init+0x1de>

	}else
	{
		// this will code late ( interrupt mode )
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT )
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	795b      	ldrb	r3, [r3, #5]
 800040e:	2b04      	cmp	r3, #4
 8000410:	d117      	bne.n	8000442 <GPIO_Init+0x8e>
		{
			//1.Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000412:	4b48      	ldr	r3, [pc, #288]	@ (8000534 <GPIO_Init+0x180>)
 8000414:	68db      	ldr	r3, [r3, #12]
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	7912      	ldrb	r2, [r2, #4]
 800041a:	4611      	mov	r1, r2
 800041c:	2201      	movs	r2, #1
 800041e:	408a      	lsls	r2, r1
 8000420:	4611      	mov	r1, r2
 8000422:	4a44      	ldr	r2, [pc, #272]	@ (8000534 <GPIO_Init+0x180>)
 8000424:	430b      	orrs	r3, r1
 8000426:	60d3      	str	r3, [r2, #12]
			//clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000428:	4b42      	ldr	r3, [pc, #264]	@ (8000534 <GPIO_Init+0x180>)
 800042a:	689b      	ldr	r3, [r3, #8]
 800042c:	687a      	ldr	r2, [r7, #4]
 800042e:	7912      	ldrb	r2, [r2, #4]
 8000430:	4611      	mov	r1, r2
 8000432:	2201      	movs	r2, #1
 8000434:	408a      	lsls	r2, r1
 8000436:	43d2      	mvns	r2, r2
 8000438:	4611      	mov	r1, r2
 800043a:	4a3e      	ldr	r2, [pc, #248]	@ (8000534 <GPIO_Init+0x180>)
 800043c:	400b      	ands	r3, r1
 800043e:	6093      	str	r3, [r2, #8]
 8000440:	e036      	b.n	80004b0 <GPIO_Init+0xfc>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT )
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	795b      	ldrb	r3, [r3, #5]
 8000446:	2b05      	cmp	r3, #5
 8000448:	d117      	bne.n	800047a <GPIO_Init+0xc6>
		{
			//1.Configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800044a:	4b3a      	ldr	r3, [pc, #232]	@ (8000534 <GPIO_Init+0x180>)
 800044c:	689b      	ldr	r3, [r3, #8]
 800044e:	687a      	ldr	r2, [r7, #4]
 8000450:	7912      	ldrb	r2, [r2, #4]
 8000452:	4611      	mov	r1, r2
 8000454:	2201      	movs	r2, #1
 8000456:	408a      	lsls	r2, r1
 8000458:	4611      	mov	r1, r2
 800045a:	4a36      	ldr	r2, [pc, #216]	@ (8000534 <GPIO_Init+0x180>)
 800045c:	430b      	orrs	r3, r1
 800045e:	6093      	str	r3, [r2, #8]
			// clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000460:	4b34      	ldr	r3, [pc, #208]	@ (8000534 <GPIO_Init+0x180>)
 8000462:	68db      	ldr	r3, [r3, #12]
 8000464:	687a      	ldr	r2, [r7, #4]
 8000466:	7912      	ldrb	r2, [r2, #4]
 8000468:	4611      	mov	r1, r2
 800046a:	2201      	movs	r2, #1
 800046c:	408a      	lsls	r2, r1
 800046e:	43d2      	mvns	r2, r2
 8000470:	4611      	mov	r1, r2
 8000472:	4a30      	ldr	r2, [pc, #192]	@ (8000534 <GPIO_Init+0x180>)
 8000474:	400b      	ands	r3, r1
 8000476:	60d3      	str	r3, [r2, #12]
 8000478:	e01a      	b.n	80004b0 <GPIO_Init+0xfc>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	795b      	ldrb	r3, [r3, #5]
 800047e:	2b06      	cmp	r3, #6
 8000480:	d116      	bne.n	80004b0 <GPIO_Init+0xfc>
		{
			//1.Configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000482:	4b2c      	ldr	r3, [pc, #176]	@ (8000534 <GPIO_Init+0x180>)
 8000484:	689b      	ldr	r3, [r3, #8]
 8000486:	687a      	ldr	r2, [r7, #4]
 8000488:	7912      	ldrb	r2, [r2, #4]
 800048a:	4611      	mov	r1, r2
 800048c:	2201      	movs	r2, #1
 800048e:	408a      	lsls	r2, r1
 8000490:	4611      	mov	r1, r2
 8000492:	4a28      	ldr	r2, [pc, #160]	@ (8000534 <GPIO_Init+0x180>)
 8000494:	430b      	orrs	r3, r1
 8000496:	6093      	str	r3, [r2, #8]
			// clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000498:	4b26      	ldr	r3, [pc, #152]	@ (8000534 <GPIO_Init+0x180>)
 800049a:	68db      	ldr	r3, [r3, #12]
 800049c:	687a      	ldr	r2, [r7, #4]
 800049e:	7912      	ldrb	r2, [r2, #4]
 80004a0:	4611      	mov	r1, r2
 80004a2:	2201      	movs	r2, #1
 80004a4:	408a      	lsls	r2, r1
 80004a6:	43d2      	mvns	r2, r2
 80004a8:	4611      	mov	r1, r2
 80004aa:	4a22      	ldr	r2, [pc, #136]	@ (8000534 <GPIO_Init+0x180>)
 80004ac:	400b      	ands	r3, r1
 80004ae:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	791b      	ldrb	r3, [r3, #4]
 80004b4:	089b      	lsrs	r3, r3, #2
 80004b6:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	791b      	ldrb	r3, [r3, #4]
 80004bc:	f003 0303 	and.w	r3, r3, #3
 80004c0:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	4a1c      	ldr	r2, [pc, #112]	@ (8000538 <GPIO_Init+0x184>)
 80004c8:	4293      	cmp	r3, r2
 80004ca:	d045      	beq.n	8000558 <GPIO_Init+0x1a4>
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	4a1a      	ldr	r2, [pc, #104]	@ (800053c <GPIO_Init+0x188>)
 80004d2:	4293      	cmp	r3, r2
 80004d4:	d02b      	beq.n	800052e <GPIO_Init+0x17a>
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	4a19      	ldr	r2, [pc, #100]	@ (8000540 <GPIO_Init+0x18c>)
 80004dc:	4293      	cmp	r3, r2
 80004de:	d024      	beq.n	800052a <GPIO_Init+0x176>
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	4a17      	ldr	r2, [pc, #92]	@ (8000544 <GPIO_Init+0x190>)
 80004e6:	4293      	cmp	r3, r2
 80004e8:	d01d      	beq.n	8000526 <GPIO_Init+0x172>
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	4a16      	ldr	r2, [pc, #88]	@ (8000548 <GPIO_Init+0x194>)
 80004f0:	4293      	cmp	r3, r2
 80004f2:	d016      	beq.n	8000522 <GPIO_Init+0x16e>
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	4a14      	ldr	r2, [pc, #80]	@ (800054c <GPIO_Init+0x198>)
 80004fa:	4293      	cmp	r3, r2
 80004fc:	d00f      	beq.n	800051e <GPIO_Init+0x16a>
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	4a13      	ldr	r2, [pc, #76]	@ (8000550 <GPIO_Init+0x19c>)
 8000504:	4293      	cmp	r3, r2
 8000506:	d008      	beq.n	800051a <GPIO_Init+0x166>
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a11      	ldr	r2, [pc, #68]	@ (8000554 <GPIO_Init+0x1a0>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d101      	bne.n	8000516 <GPIO_Init+0x162>
 8000512:	2307      	movs	r3, #7
 8000514:	e021      	b.n	800055a <GPIO_Init+0x1a6>
 8000516:	2300      	movs	r3, #0
 8000518:	e01f      	b.n	800055a <GPIO_Init+0x1a6>
 800051a:	2306      	movs	r3, #6
 800051c:	e01d      	b.n	800055a <GPIO_Init+0x1a6>
 800051e:	2305      	movs	r3, #5
 8000520:	e01b      	b.n	800055a <GPIO_Init+0x1a6>
 8000522:	2304      	movs	r3, #4
 8000524:	e019      	b.n	800055a <GPIO_Init+0x1a6>
 8000526:	2303      	movs	r3, #3
 8000528:	e017      	b.n	800055a <GPIO_Init+0x1a6>
 800052a:	2302      	movs	r3, #2
 800052c:	e015      	b.n	800055a <GPIO_Init+0x1a6>
 800052e:	2301      	movs	r3, #1
 8000530:	e013      	b.n	800055a <GPIO_Init+0x1a6>
 8000532:	bf00      	nop
 8000534:	40013c00 	.word	0x40013c00
 8000538:	40020000 	.word	0x40020000
 800053c:	40020400 	.word	0x40020400
 8000540:	40020800 	.word	0x40020800
 8000544:	40020c00 	.word	0x40020c00
 8000548:	40021000 	.word	0x40021000
 800054c:	40021400 	.word	0x40021400
 8000550:	40021800 	.word	0x40021800
 8000554:	40021c00 	.word	0x40021c00
 8000558:	2300      	movs	r3, #0
 800055a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800055c:	4b5d      	ldr	r3, [pc, #372]	@ (80006d4 <GPIO_Init+0x320>)
 800055e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000560:	4a5c      	ldr	r2, [pc, #368]	@ (80006d4 <GPIO_Init+0x320>)
 8000562:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000566:	6413      	str	r3, [r2, #64]	@ 0x40
	    SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000568:	7c7a      	ldrb	r2, [r7, #17]
 800056a:	7cbb      	ldrb	r3, [r7, #18]
 800056c:	009b      	lsls	r3, r3, #2
 800056e:	fa02 f103 	lsl.w	r1, r2, r3
 8000572:	4a59      	ldr	r2, [pc, #356]	@ (80006d8 <GPIO_Init+0x324>)
 8000574:	7cfb      	ldrb	r3, [r7, #19]
 8000576:	3302      	adds	r3, #2
 8000578:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800057c:	4b57      	ldr	r3, [pc, #348]	@ (80006dc <GPIO_Init+0x328>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	4611      	mov	r1, r2
 8000586:	2201      	movs	r2, #1
 8000588:	408a      	lsls	r2, r1
 800058a:	4611      	mov	r1, r2
 800058c:	4a53      	ldr	r2, [pc, #332]	@ (80006dc <GPIO_Init+0x328>)
 800058e:	430b      	orrs	r3, r1
 8000590:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 8000592:	2300      	movs	r3, #0
 8000594:	617b      	str	r3, [r7, #20]
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	799b      	ldrb	r3, [r3, #6]
 800059a:	461a      	mov	r2, r3
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	005b      	lsls	r3, r3, #1
 80005a2:	fa02 f303 	lsl.w	r3, r2, r3
 80005a6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	689a      	ldr	r2, [r3, #8]
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	791b      	ldrb	r3, [r3, #4]
 80005b2:	4619      	mov	r1, r3
 80005b4:	2303      	movs	r3, #3
 80005b6:	408b      	lsls	r3, r1
 80005b8:	43db      	mvns	r3, r3
 80005ba:	4619      	mov	r1, r3
 80005bc:	687b      	ldr	r3, [r7, #4]
 80005be:	681b      	ldr	r3, [r3, #0]
 80005c0:	400a      	ands	r2, r1
 80005c2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	6899      	ldr	r1, [r3, #8]
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	697a      	ldr	r2, [r7, #20]
 80005d0:	430a      	orrs	r2, r1
 80005d2:	609a      	str	r2, [r3, #8]

	temp = 0;
 80005d4:	2300      	movs	r3, #0
 80005d6:	617b      	str	r3, [r7, #20]

	//3.configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	79db      	ldrb	r3, [r3, #7]
 80005dc:	461a      	mov	r2, r3
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	005b      	lsls	r3, r3, #1
 80005e4:	fa02 f303 	lsl.w	r3, r2, r3
 80005e8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	68da      	ldr	r2, [r3, #12]
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	791b      	ldrb	r3, [r3, #4]
 80005f4:	4619      	mov	r1, r3
 80005f6:	2303      	movs	r3, #3
 80005f8:	408b      	lsls	r3, r1
 80005fa:	43db      	mvns	r3, r3
 80005fc:	4619      	mov	r1, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	400a      	ands	r2, r1
 8000604:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	68d9      	ldr	r1, [r3, #12]
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	697a      	ldr	r2, [r7, #20]
 8000612:	430a      	orrs	r2, r1
 8000614:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000616:	2300      	movs	r3, #0
 8000618:	617b      	str	r3, [r7, #20]

	//4.configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	7a1b      	ldrb	r3, [r3, #8]
 800061e:	461a      	mov	r2, r3
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	791b      	ldrb	r3, [r3, #4]
 8000624:	fa02 f303 	lsl.w	r3, r2, r3
 8000628:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	685a      	ldr	r2, [r3, #4]
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	791b      	ldrb	r3, [r3, #4]
 8000634:	4619      	mov	r1, r3
 8000636:	2301      	movs	r3, #1
 8000638:	408b      	lsls	r3, r1
 800063a:	43db      	mvns	r3, r3
 800063c:	4619      	mov	r1, r3
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	400a      	ands	r2, r1
 8000644:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	6859      	ldr	r1, [r3, #4]
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	697a      	ldr	r2, [r7, #20]
 8000652:	430a      	orrs	r2, r1
 8000654:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000656:	2300      	movs	r3, #0
 8000658:	617b      	str	r3, [r7, #20]

	//5.configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	795b      	ldrb	r3, [r3, #5]
 800065e:	2b02      	cmp	r3, #2
 8000660:	d132      	bne.n	80006c8 <GPIO_Init+0x314>
	{
		//configure the alt function registers
		uint32_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	791b      	ldrb	r3, [r3, #4]
 8000666:	08db      	lsrs	r3, r3, #3
 8000668:	b2db      	uxtb	r3, r3
 800066a:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	791b      	ldrb	r3, [r3, #4]
 8000670:	f003 0307 	and.w	r3, r3, #7
 8000674:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) );  //clearing
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	68fa      	ldr	r2, [r7, #12]
 800067c:	3208      	adds	r2, #8
 800067e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000682:	68bb      	ldr	r3, [r7, #8]
 8000684:	009b      	lsls	r3, r3, #2
 8000686:	210f      	movs	r1, #15
 8000688:	fa01 f303 	lsl.w	r3, r1, r3
 800068c:	43db      	mvns	r3, r3
 800068e:	4619      	mov	r1, r3
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	4011      	ands	r1, r2
 8000696:	68fa      	ldr	r2, [r7, #12]
 8000698:	3208      	adds	r2, #8
 800069a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2 ) );
 800069e:	687b      	ldr	r3, [r7, #4]
 80006a0:	681b      	ldr	r3, [r3, #0]
 80006a2:	68fa      	ldr	r2, [r7, #12]
 80006a4:	3208      	adds	r2, #8
 80006a6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	7a5b      	ldrb	r3, [r3, #9]
 80006ae:	4619      	mov	r1, r3
 80006b0:	68bb      	ldr	r3, [r7, #8]
 80006b2:	009b      	lsls	r3, r3, #2
 80006b4:	fa01 f303 	lsl.w	r3, r1, r3
 80006b8:	4619      	mov	r1, r3
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	681b      	ldr	r3, [r3, #0]
 80006be:	4311      	orrs	r1, r2
 80006c0:	68fa      	ldr	r2, [r7, #12]
 80006c2:	3208      	adds	r2, #8
 80006c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80006c8:	bf00      	nop
 80006ca:	371c      	adds	r7, #28
 80006cc:	46bd      	mov	sp, r7
 80006ce:	bc80      	pop	{r7}
 80006d0:	4770      	bx	lr
 80006d2:	bf00      	nop
 80006d4:	40023800 	.word	0x40023800
 80006d8:	40013800 	.word	0x40013800
 80006dc:	40013c00 	.word	0x40013c00

080006e0 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value)
{
	pGPIOx->ODR = value;
}
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006e0:	b480      	push	{r7}
 80006e2:	b083      	sub	sp, #12
 80006e4:	af00      	add	r7, sp, #0
 80006e6:	6078      	str	r0, [r7, #4]
 80006e8:	460b      	mov	r3, r1
 80006ea:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR  ^= ( 1 << PinNumber);
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	695b      	ldr	r3, [r3, #20]
 80006f0:	78fa      	ldrb	r2, [r7, #3]
 80006f2:	2101      	movs	r1, #1
 80006f4:	fa01 f202 	lsl.w	r2, r1, r2
 80006f8:	405a      	eors	r2, r3
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	615a      	str	r2, [r3, #20]
}
 80006fe:	bf00      	nop
 8000700:	370c      	adds	r7, #12
 8000702:	46bd      	mov	sp, r7
 8000704:	bc80      	pop	{r7}
 8000706:	4770      	bx	lr

08000708 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EnorDi)
{
 8000708:	b480      	push	{r7}
 800070a:	b083      	sub	sp, #12
 800070c:	af00      	add	r7, sp, #0
 800070e:	4603      	mov	r3, r0
 8000710:	71fb      	strb	r3, [r7, #7]
 8000712:	460b      	mov	r3, r1
 8000714:	71bb      	strb	r3, [r7, #6]
 8000716:	4613      	mov	r3, r2
 8000718:	717b      	strb	r3, [r7, #5]
	if(EnorDi == ENABLE)
 800071a:	797b      	ldrb	r3, [r7, #5]
 800071c:	2b01      	cmp	r3, #1
 800071e:	d133      	bne.n	8000788 <GPIO_IRQInterruptConfig+0x80>
	{
		if(IRQNumber <= 31)
 8000720:	79fb      	ldrb	r3, [r7, #7]
 8000722:	2b1f      	cmp	r3, #31
 8000724:	d80a      	bhi.n	800073c <GPIO_IRQInterruptConfig+0x34>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber);
 8000726:	4b35      	ldr	r3, [pc, #212]	@ (80007fc <GPIO_IRQInterruptConfig+0xf4>)
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	79fa      	ldrb	r2, [r7, #7]
 800072c:	2101      	movs	r1, #1
 800072e:	fa01 f202 	lsl.w	r2, r1, r2
 8000732:	4611      	mov	r1, r2
 8000734:	4a31      	ldr	r2, [pc, #196]	@ (80007fc <GPIO_IRQInterruptConfig+0xf4>)
 8000736:	430b      	orrs	r3, r1
 8000738:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER3 |= ( 1 << (IRQNumber % 64) );

		}
	}
}
 800073a:	e059      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
		}else if(IRQNumber > 31 && IRQNumber < 64)
 800073c:	79fb      	ldrb	r3, [r7, #7]
 800073e:	2b1f      	cmp	r3, #31
 8000740:	d90f      	bls.n	8000762 <GPIO_IRQInterruptConfig+0x5a>
 8000742:	79fb      	ldrb	r3, [r7, #7]
 8000744:	2b3f      	cmp	r3, #63	@ 0x3f
 8000746:	d80c      	bhi.n	8000762 <GPIO_IRQInterruptConfig+0x5a>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000748:	4b2d      	ldr	r3, [pc, #180]	@ (8000800 <GPIO_IRQInterruptConfig+0xf8>)
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	79fa      	ldrb	r2, [r7, #7]
 800074e:	f002 021f 	and.w	r2, r2, #31
 8000752:	2101      	movs	r1, #1
 8000754:	fa01 f202 	lsl.w	r2, r1, r2
 8000758:	4611      	mov	r1, r2
 800075a:	4a29      	ldr	r2, [pc, #164]	@ (8000800 <GPIO_IRQInterruptConfig+0xf8>)
 800075c:	430b      	orrs	r3, r1
 800075e:	6013      	str	r3, [r2, #0]
 8000760:	e046      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 8000762:	79fb      	ldrb	r3, [r7, #7]
 8000764:	2b3f      	cmp	r3, #63	@ 0x3f
 8000766:	d943      	bls.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
 8000768:	79fb      	ldrb	r3, [r7, #7]
 800076a:	2b5f      	cmp	r3, #95	@ 0x5f
 800076c:	d840      	bhi.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
			*NVIC_ISER3 |= ( 1 << (IRQNumber % 64) );
 800076e:	4b25      	ldr	r3, [pc, #148]	@ (8000804 <GPIO_IRQInterruptConfig+0xfc>)
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	79fa      	ldrb	r2, [r7, #7]
 8000774:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000778:	2101      	movs	r1, #1
 800077a:	fa01 f202 	lsl.w	r2, r1, r2
 800077e:	4611      	mov	r1, r2
 8000780:	4a20      	ldr	r2, [pc, #128]	@ (8000804 <GPIO_IRQInterruptConfig+0xfc>)
 8000782:	430b      	orrs	r3, r1
 8000784:	6013      	str	r3, [r2, #0]
}
 8000786:	e033      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
		if(IRQNumber <= 31)
 8000788:	79fb      	ldrb	r3, [r7, #7]
 800078a:	2b1f      	cmp	r3, #31
 800078c:	d80a      	bhi.n	80007a4 <GPIO_IRQInterruptConfig+0x9c>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 800078e:	4b1e      	ldr	r3, [pc, #120]	@ (8000808 <GPIO_IRQInterruptConfig+0x100>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	79fa      	ldrb	r2, [r7, #7]
 8000794:	2101      	movs	r1, #1
 8000796:	fa01 f202 	lsl.w	r2, r1, r2
 800079a:	4611      	mov	r1, r2
 800079c:	4a1a      	ldr	r2, [pc, #104]	@ (8000808 <GPIO_IRQInterruptConfig+0x100>)
 800079e:	430b      	orrs	r3, r1
 80007a0:	6013      	str	r3, [r2, #0]
}
 80007a2:	e025      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
		}else if(IRQNumber > 31 && IRQNumber < 64)
 80007a4:	79fb      	ldrb	r3, [r7, #7]
 80007a6:	2b1f      	cmp	r3, #31
 80007a8:	d90f      	bls.n	80007ca <GPIO_IRQInterruptConfig+0xc2>
 80007aa:	79fb      	ldrb	r3, [r7, #7]
 80007ac:	2b3f      	cmp	r3, #63	@ 0x3f
 80007ae:	d80c      	bhi.n	80007ca <GPIO_IRQInterruptConfig+0xc2>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 80007b0:	4b16      	ldr	r3, [pc, #88]	@ (800080c <GPIO_IRQInterruptConfig+0x104>)
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	79fa      	ldrb	r2, [r7, #7]
 80007b6:	f002 021f 	and.w	r2, r2, #31
 80007ba:	2101      	movs	r1, #1
 80007bc:	fa01 f202 	lsl.w	r2, r1, r2
 80007c0:	4611      	mov	r1, r2
 80007c2:	4a12      	ldr	r2, [pc, #72]	@ (800080c <GPIO_IRQInterruptConfig+0x104>)
 80007c4:	430b      	orrs	r3, r1
 80007c6:	6013      	str	r3, [r2, #0]
 80007c8:	e012      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
		else if(IRQNumber >= 6 && IRQNumber < 96)
 80007ca:	79fb      	ldrb	r3, [r7, #7]
 80007cc:	2b05      	cmp	r3, #5
 80007ce:	d90f      	bls.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
 80007d0:	79fb      	ldrb	r3, [r7, #7]
 80007d2:	2b5f      	cmp	r3, #95	@ 0x5f
 80007d4:	d80c      	bhi.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
			*NVIC_ICER3 |= ( 1 << (IRQNumber % 64) );
 80007d6:	4b0e      	ldr	r3, [pc, #56]	@ (8000810 <GPIO_IRQInterruptConfig+0x108>)
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	79fa      	ldrb	r2, [r7, #7]
 80007dc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80007e0:	2101      	movs	r1, #1
 80007e2:	fa01 f202 	lsl.w	r2, r1, r2
 80007e6:	4611      	mov	r1, r2
 80007e8:	4a09      	ldr	r2, [pc, #36]	@ (8000810 <GPIO_IRQInterruptConfig+0x108>)
 80007ea:	430b      	orrs	r3, r1
 80007ec:	6013      	str	r3, [r2, #0]
}
 80007ee:	e7ff      	b.n	80007f0 <GPIO_IRQInterruptConfig+0xe8>
 80007f0:	bf00      	nop
 80007f2:	370c      	adds	r7, #12
 80007f4:	46bd      	mov	sp, r7
 80007f6:	bc80      	pop	{r7}
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop
 80007fc:	e000e100 	.word	0xe000e100
 8000800:	e000e104 	.word	0xe000e104
 8000804:	e000e10c 	.word	0xe000e10c
 8000808:	e000e180 	.word	0xe000e180
 800080c:	e000e184 	.word	0xe000e184
 8000810:	e000e18c 	.word	0xe000e18c

08000814 <GPIO_IRQPriorityConfig>:
/*
 *  GPIO_IRQPriorityConfig
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber,uint8_t IRQPriority)
{
 8000814:	b480      	push	{r7}
 8000816:	b085      	sub	sp, #20
 8000818:	af00      	add	r7, sp, #0
 800081a:	4603      	mov	r3, r0
 800081c:	460a      	mov	r2, r1
 800081e:	71fb      	strb	r3, [r7, #7]
 8000820:	4613      	mov	r3, r2
 8000822:	71bb      	strb	r3, [r7, #6]
	//1. first lets find out the ipr register
	uint8_t iprx = IRQNumber / 4;
 8000824:	79fb      	ldrb	r3, [r7, #7]
 8000826:	089b      	lsrs	r3, r3, #2
 8000828:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber %4 ;
 800082a:	79fb      	ldrb	r3, [r7, #7]
 800082c:	f003 0303 	and.w	r3, r3, #3
 8000830:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000832:	7bbb      	ldrb	r3, [r7, #14]
 8000834:	00db      	lsls	r3, r3, #3
 8000836:	b2db      	uxtb	r3, r3
 8000838:	3304      	adds	r3, #4
 800083a:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + (iprx * 4)) |= (IRQPriority << shift_amount);
 800083c:	7bfb      	ldrb	r3, [r7, #15]
 800083e:	011b      	lsls	r3, r3, #4
 8000840:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000844:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000848:	681a      	ldr	r2, [r3, #0]
 800084a:	79b9      	ldrb	r1, [r7, #6]
 800084c:	7b7b      	ldrb	r3, [r7, #13]
 800084e:	fa01 f303 	lsl.w	r3, r1, r3
 8000852:	4619      	mov	r1, r3
 8000854:	7bfb      	ldrb	r3, [r7, #15]
 8000856:	011b      	lsls	r3, r3, #4
 8000858:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800085c:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000860:	430a      	orrs	r2, r1
 8000862:	601a      	str	r2, [r3, #0]

}
 8000864:	bf00      	nop
 8000866:	3714      	adds	r7, #20
 8000868:	46bd      	mov	sp, r7
 800086a:	bc80      	pop	{r7}
 800086c:	4770      	bx	lr
	...

08000870 <GPIO_IRQHandling>:
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000870:	b480      	push	{r7}
 8000872:	b083      	sub	sp, #12
 8000874:	af00      	add	r7, sp, #0
 8000876:	4603      	mov	r3, r0
 8000878:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 800087a:	4b0c      	ldr	r3, [pc, #48]	@ (80008ac <GPIO_IRQHandling+0x3c>)
 800087c:	695b      	ldr	r3, [r3, #20]
 800087e:	79fa      	ldrb	r2, [r7, #7]
 8000880:	2101      	movs	r1, #1
 8000882:	fa01 f202 	lsl.w	r2, r1, r2
 8000886:	4013      	ands	r3, r2
 8000888:	2b00      	cmp	r3, #0
 800088a:	d009      	beq.n	80008a0 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 800088c:	4b07      	ldr	r3, [pc, #28]	@ (80008ac <GPIO_IRQHandling+0x3c>)
 800088e:	695b      	ldr	r3, [r3, #20]
 8000890:	79fa      	ldrb	r2, [r7, #7]
 8000892:	2101      	movs	r1, #1
 8000894:	fa01 f202 	lsl.w	r2, r1, r2
 8000898:	4611      	mov	r1, r2
 800089a:	4a04      	ldr	r2, [pc, #16]	@ (80008ac <GPIO_IRQHandling+0x3c>)
 800089c:	430b      	orrs	r3, r1
 800089e:	6153      	str	r3, [r2, #20]
	}
}
 80008a0:	bf00      	nop
 80008a2:	370c      	adds	r7, #12
 80008a4:	46bd      	mov	sp, r7
 80008a6:	bc80      	pop	{r7}
 80008a8:	4770      	bx	lr
 80008aa:	bf00      	nop
 80008ac:	40013c00 	.word	0x40013c00

080008b0 <__libc_init_array>:
 80008b0:	b570      	push	{r4, r5, r6, lr}
 80008b2:	4d0d      	ldr	r5, [pc, #52]	@ (80008e8 <__libc_init_array+0x38>)
 80008b4:	4c0d      	ldr	r4, [pc, #52]	@ (80008ec <__libc_init_array+0x3c>)
 80008b6:	1b64      	subs	r4, r4, r5
 80008b8:	10a4      	asrs	r4, r4, #2
 80008ba:	2600      	movs	r6, #0
 80008bc:	42a6      	cmp	r6, r4
 80008be:	d109      	bne.n	80008d4 <__libc_init_array+0x24>
 80008c0:	4d0b      	ldr	r5, [pc, #44]	@ (80008f0 <__libc_init_array+0x40>)
 80008c2:	4c0c      	ldr	r4, [pc, #48]	@ (80008f4 <__libc_init_array+0x44>)
 80008c4:	f000 f818 	bl	80008f8 <_init>
 80008c8:	1b64      	subs	r4, r4, r5
 80008ca:	10a4      	asrs	r4, r4, #2
 80008cc:	2600      	movs	r6, #0
 80008ce:	42a6      	cmp	r6, r4
 80008d0:	d105      	bne.n	80008de <__libc_init_array+0x2e>
 80008d2:	bd70      	pop	{r4, r5, r6, pc}
 80008d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80008d8:	4798      	blx	r3
 80008da:	3601      	adds	r6, #1
 80008dc:	e7ee      	b.n	80008bc <__libc_init_array+0xc>
 80008de:	f855 3b04 	ldr.w	r3, [r5], #4
 80008e2:	4798      	blx	r3
 80008e4:	3601      	adds	r6, #1
 80008e6:	e7f2      	b.n	80008ce <__libc_init_array+0x1e>
 80008e8:	08000910 	.word	0x08000910
 80008ec:	08000910 	.word	0x08000910
 80008f0:	08000910 	.word	0x08000910
 80008f4:	08000914 	.word	0x08000914

080008f8 <_init>:
 80008f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008fa:	bf00      	nop
 80008fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008fe:	bc08      	pop	{r3}
 8000900:	469e      	mov	lr, r3
 8000902:	4770      	bx	lr

08000904 <_fini>:
 8000904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000906:	bf00      	nop
 8000908:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800090a:	bc08      	pop	{r3}
 800090c:	469e      	mov	lr, r3
 800090e:	4770      	bx	lr
